# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Export Tag
        run: |
          echo "RELEASE_TAG=${{ github.ref_name }}" >> "$GITHUB_ENV"

      # - name: Use Node.js 23.x
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "23.x"
      #     cache-dependency-path: frontend/yarn.lock
      #     cache: 'yarn'
      
      - name: update rust
        run: rustup update

      - name: install yarn
        run: yarn install --immutable
        working-directory: frontend


      - name: build
        run: ./build.sh
        
      # - name: capture build artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Artifacts
      #     path: build/libs/

  # release-artifacts:
  #   permissions:
  #     contents: write
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         merge-multiple: true
  #         path: artifacts/

  #     - name: Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         #tag: "test"
  #         #tag: ${{ env.TAG }}
  #         tag: ${{ github.ref_name }}
  #         artifacts: "artifacts/*.jar"
  #         prerelease: false
  #         body: "pre release, do not use"

  #     - name: Modrinth
  #       uses: Kir-Antipov/mc-publish@v3.3.0
  #       with:
  #         # Only include this section if you wish to publish
  #         # your assets on Modrinth.
  #         #tag: ${{ github.ref_name }}

  #         modrinth-id: fEwhuw0Y
  #         modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
  #         loaders: fabric
  #         version-type: release
  #         files: |
  #           artifacts/!(*-@(dev|sources|javadoc)).jar
